<<<<<<< HEAD
在C#中分层，分项目

//重用性不高
两层架构(不代表只有两个项目)
显示层(UI、Web、View):控制台程序、网页、桌面应用程序（给用户看的显示使用的）
QQ.Web:项目中使用点分割方式，便于引用命名空间
数据访问层(DAL):用于访问数据库



QQ.Web:项目中使用点分割方式，便于引用命名空间
三层架构(概念)

两层架构(不代表只有两个项目)
1、显示层(UI、Web、View):控制台程序、网页、桌面应用程序（给用户看的显示使用的）
   显示层可以有多个（产品模块、文件模块、采购模块、收付款模块、、、）
2、业务逻辑层(BLL)：写业务逻辑
3、数据访问层(DAL):用于访问数据库

//组织数据 注册 生日、身份证、账号、密码、手机号....很多个字段
Web引用关系：引用业务逻辑层(BLL)、引用模型层（Models）
BLL引用关系: 引用数据访问层(DAL) 、引用模型层（Models）
DAL引用关系:  引用模型层（Models）

UI - BLL -  DAL
Models

Models(模型层):通常对应就是数据字段创建的类（实体类或模型类）

通常大部分的一个业务表一个实体类


辅助表：字典表、系统表

辅助层
项目越复杂(项目层越来越多)

Controls(用户控件)
Common(工具层)


--SqlDataReader 游标操作对象，本身不存数据 连接数据库状态下可用
内存（临时）中的数据结构
数据集:DataSet 
临时表:DataTable 
数据行:DataRow










=======
在C#中分层，分项目

//重用性不高
两层架构(不代表只有两个项目)
显示层(UI、Web、View):控制台程序、网页、桌面应用程序（给用户看的显示使用的）
QQ.Web:项目中使用点分割方式，便于引用命名空间
数据访问层(DAL):用于访问数据库



QQ.Web:项目中使用点分割方式，便于引用命名空间
三层架构(概念)

两层架构(不代表只有两个项目)
1、显示层(UI、Web、View):控制台程序、网页、桌面应用程序（给用户看的显示使用的）
   显示层可以有多个（产品模块、文件模块、采购模块、收付款模块、、、）
2、业务逻辑层(BLL)：写业务逻辑
3、数据访问层(DAL):用于访问数据库

//组织数据 注册 生日、身份证、账号、密码、手机号....很多个字段
Web引用关系：引用业务逻辑层(BLL)、引用模型层（Models）
BLL引用关系: 引用数据访问层(DAL) 、引用模型层（Models）
DAL引用关系:  引用模型层（Models）

UI - BLL -  DAL
Models

Models(模型层):通常对应就是数据字段创建的类（实体类或模型类）

通常大部分的一个业务表一个实体类


辅助表：字典表、系统表

辅助层
项目越复杂(项目层越来越多)

Controls(用户控件)
Common(工具层)


--SqlDataReader 游标操作对象，本身不存数据 连接数据库状态下可用
内存（临时）中的数据结构
数据集:DataSet 
临时表:DataTable 
数据行:DataRow










>>>>>>> 45f0c71 (new)
